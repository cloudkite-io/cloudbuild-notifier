substitutions:
  _ENVIRONMENT: dev
  _GCLOUD_PROJECT: cloudkite-dev
  _CLOUDSDK_COMPUTE_REGION: us-central1
  _CLOUDSDK_CONTAINER_CLUSTER: dev-gke
  _HELM_REPO: github_cloudkite-io_infrastructure
  _HELM_CHART_PATH: kubernetes/helm
  _HELM_CHART_NAME: cloudbuild-notifier
  _REPO_NAME: cloudbuild-notifier
  _K8S_NAMESPACE: cloudbuild-notifier

# This cloudbuild.yaml contains a git-crypt decryption build step that pulls the git-crypt key from
# Google's Cloud KMS.
#
# Requires the Container Builder Service Account to have permission to access
# and decrypt keys from KMS.

### Encrypted using this command:
# gcloud --project cloudkite-dev kms encrypt --plaintext-file .gcloud-build.key --ciphertext-file gcloud-build.key.enc --location=global --keyring=infrastructure --key=git-crypt

steps:
- name: 'gcr.io/cloud-builders/docker'  # Build and tag image
  args:
  - build
  - -t
  - gcr.io/$PROJECT_ID/${_REPO_NAME}:$COMMIT_SHA
  - --cache-from
  - gcr.io/$PROJECT_ID/${_REPO_NAME}:latest
  - .
- name: 'gcr.io/cloud-builders/gcloud'  # Clone infrastructure repo
  args:
  - source
  - repos
  - clone
  - ${_HELM_REPO}
  - /helm
  volumes:
  - name: 'helm'
    path: '/helm'
- name: 'gcr.io/cloud-builders/gcloud'  # Decrypt cloudbuild key
  args:
  - kms
  - decrypt
  - --ciphertext-file=/helm/gcloud-build.key.enc
  - --plaintext-file=/helm/.gcloud-build.key
  - --location=global
  - --keyring=infrastructure
  - --key=git-crypt
  volumes:
  - name: 'helm'
    path: '/helm'
- name: 'gcr.io/cloudkite-public/git-crypt'  # Use decrypted key to unlock git-crypt
  entrypoint: 'sh'
  args:
  - -c
  - gpg --batch --import .gcloud-build.key && git-crypt unlock
  dir: '/helm'
  volumes:
  - name: 'helm'
    path: '/helm'
- name: 'gcr.io/cloudkite-public/gcloud-helm-git-crypt:20190215'  # Deploy helm chart
  args:
  - /usr/local/bin/helm
  - upgrade
  - --wait
  - --timeout
  - "900"
  - --install
  - --namespace
  - ${_K8S_NAMESPACE}
  - --values
  - ${_HELM_CHART_PATH}/${_HELM_CHART_NAME}/${_ENVIRONMENT}.values.yaml
  - --values
  - ${_HELM_CHART_PATH}/${_HELM_CHART_NAME}/${_ENVIRONMENT}.secrets.yaml
  - --set
  - env=${_ENVIRONMENT},image.tag=${COMMIT_SHA}
  - ${_HELM_CHART_NAME}
  - ${_HELM_CHART_PATH}/${_HELM_CHART_NAME}
  dir: '/helm'
  env:
  - 'GCLOUD_PROJECT=${_GCLOUD_PROJECT}'
  - 'CLOUDSDK_COMPUTE_REGION=${_CLOUDSDK_COMPUTE_REGION}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
  - 'TILLER_NAMESPACE=helm'
  volumes:
  - name: 'helm'
    path: '/helm'

images:
  - 'gcr.io/$PROJECT_ID/${_REPO_NAME}:latest'

timeout: 1200s

tags:
- ${_HELM_CHART_NAME}
- ${_ENVIRONMENT}